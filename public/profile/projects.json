{
    "projects": [
        {
            "image": "images/projects/portfolio-poster.png",
            "title": "My Portfolio",
            "bodyText": "- Developer Portfolio Website made in React\n -  Fully customisable and dynamic, easily change data and images.",
            "links": [
                {
                    "text": "GitHub",
                    "href": "https://github.com/Surabhi-Sunil/portfolio"
                },
                {
                    "text": "Live",
                    "href": "https://portfolio-github-io-rho.vercel.app/"
                }
            ],
            "tags": [
                "React",
                "Portfolio",
                "JavaScript"
            ]
        },
        {
            "image": "images/projects/Earthquake.png",
            "title": "Case Study Repository",
            "bodyText": "- Developed a full-stack, searchable case study repository for the University of Minnesota's School of Dentistry using the MERN stack (Express.js, React, Node.js) and MySQL.\n - Implemented course-based tagging within the repository, enabling faculty to effectively categorize and retrieve case studies relevant to specific courses.\n - Enhanced search functionality with optimized SQL queries, significantly improving data retrieval speed and user experience.\n - Facilitated knowledge sharing among faculty members, contributing to an improved educational environment through efficient access to educational resources",
                   "links": [
                {
                    "text": "GitHub",
                    "href": "https://github.com/Surabhi-Sunil/CasesStudyRepository"
                }
            ],
            "tags": [
                "Fullstack",
                "Data Management",
                "MySQL",
                "Predictive Analysis",
                "Web Development"
            ]
        },
          {
            "image": "images/projects/Earthquake.png",
            "title": "Earthquake Prediction",
            "bodyText": "- Analyzed 28 years of historical earthquake and tsunami data to develop predictive models, enhancing disaster preparedness and risk assessment capabilities.\n - Utilized SQL and Python for data manipulation and analysis, ensuring robust data processing and integration. \n - Developed and evaluated multiple advanced predictive models including Random Forest, Logistic Regression, XGBoost, Decision Trees, and Naive Bayes to identify the most effective algorithm for predicting disaster impacts.\n - Achieved a 90.5% accuracy with the Random Forest model, identified as the most effective algorithm.\n - Provided actionable insights through data modeling, significantly contributing to strategic planning and mitigation of disaster risks.",
            "links": [
                {
                    "text": "GitHub",
                    "href": "https://github.com/Surabhi-Sunil/Earthquake-prediction"
                }
            ],
            "tags": [
                "Machine learning",
                "Data analysis",
                "SQL",
                "Predictive Analysis",
                "Python"
            ]
        },
        {
            "title": "Lane and Object detection in Automated cars",
            "bodyText": "- The project's objective was to design a model car that could detect the lanes and objects in front of it without human intervention. \n - The model was built and connected to Raspberry Pi and Arduino, which acted as the master and the slave devices. \n- The Arduino was programmed to move the wheels of the model.\n - The images captured from the camera mounted on the model were provided as input to the Raspberry Pi. \n- They were subjected to pre-processing, canny edge detection to detect the curves and edges, hough transform to accurately mark the lines, and linear regression to detect the lanes and blur out the surroundings. \n - The model had an accuracy greater than 90%.",
            "links": [
                {
                    "text": "Research Paper",
                    "href": "https://ieeexplore.ieee.org/document/9742978"
                }
            ],
            "tags": [
                "Research",
                "Data science",
                "Python"
            ]
        },
        {
            "title": "Benefit - the Fitness App",
            "bodyText": "- An android app which allows the user to track both mental and physical wellness by displaying the overall calorie intake, the exercises completed and tracking the meditation hours of an individual.\n - The dashboard page provides the user with a pie chart of the number of workouts completed and daily calorie intake. \n - The user details, such as BMI, will be shown on the personal details page.\n - The application also has a meditation tab that can play music where the user can set the timer for the meditation. \n - The user can also view the exercise and instructions on how to complete it appropriately. \n - The SQLite database was used to store the individual personal details, food intake, and progress.",
            "tags": [
                "Java",
                "Android Studio",
                "SQLite"
            ]
        },
        {
            "title": "Routine Tracker for Students and Teachers",
            "bodyText": "- The website was designed for students and teachers to track their daily routines for class. \n - They could view the class schedules, add notes, attach essential links, and maintain a to-do list within the website.\n - The Professors could mark the attendance of the enrolled candidates.\n - The candidates can also track the attendance for each class which is displayed by the attendance percentage of classes attended to the total number of classes conducted.",
            "tags": [
                "Java",
                "HTML",
                "Bootstrap",
                "CSS",
                "JavaScript",
                "Ajax",
                "PHPMyAdmin Database",
                "Xampp server"
            ]
        },
        {
            "title": "Library manager",
            "bodyText": "- An application that allows the library to track the borrowing/selling of books. \n - The website has two modules: the admin and the customer module.\n - Depending on availability, the customer could buy or borrow the books, view the cart, and checkout after viewing the final price.\n - If the customer borrowed the book, they would receive mail before the last return date as a reminder.\n - The library admin could add, delete, or restock books, view the library members, and view the books borrowed with the return date.",
            "tags": [
                "Python",
                "MySQL",
                "Tkinter GUI",
                "SMTP lib"
            ]
        },
        {
            "title": "E-care for Public",
            "bodyText": "- The project's main objective was to improve the patients' interaction with hospitals and to efficiently manage the data. \n - This application would allow patients to connect to hospitals, book beds, get appointments with the doctor, and view their medical history.\n - The doctors could view the patients assigned for a particular day and provide diagnosis and prescriptions.\n - The patient's details were stored in a separate file, and each time the patient visited, the patient's details were appended to the same file.\n - The patient was also sent an email as a reminder for the appointment. \n - The files of the patient are stored in the system's memory.",
            "tags": [
                "Java",
                "Apache Derby",
                "OOPs concepts",
                "Reading from and writing to files",
                "Cron job"
            ]
        },
        {
            "title": "Encryption and Decryption",
            "bodyText": "- The project aims to secure the data and message transfer from person to person using an encryption algorithm.\n This project allows the user to enter a message which will be encrypted and stored.\n - The authorized person would be able to read the received message in its original format after logging in and providing the password to decrypt the message. \n - Encryption and decryption are carried out with the help of the caesar cipher algorithm.",
            "tags": [
                "C",
                "Data structures",
                "Ceaser Cipher"
            ]
        },
        {
            "title": "Travel Rewards",
            "bodyText": "- The project aims to find the shortest path using the djiktra's algorithm and provide travel rewards based on the distance. \n - The user will be able to go from source to destination and gain points. \n - The user can redeem points during the next travel.",
            "tags": [
                "C++",
                "Algorithms",
                "Dijkstra's"
            ]
        },
        {
            "title": "Vending Machine",
            "bodyText": "- The project allows the user to check the fruits and vegetables available.\n - Can add products to cart and checkout. \n - The admin can add more products to stalk. \n - The fruits that are expired will be replaced by admin.",
            "tags": [
                "Java",
                "Springboot",
                "React",
                "SQLite"
            ]
        }
    ]
}